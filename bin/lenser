#!/usr/bin/env node

/* eslint-disable no-global-assign */

'use strict'

require = require('esm')(module)

const logger = require('../src/logger')
const { version } = require('../package.json')
const RC = require('../src/run-config').default
const scan = require('../src/scan').default

logger.log(`Version: v${version}`)

const rc = new RC()

const program = require('commander')
program
  .version(version, '-v, --version')
  .option('-f, --fail-on [low|medium|high|critical]',
    'Set the level at which hawkeye returns non-zero status codes. Defaults to low.', rc.withFailOn.bind(rc))
  .option('-j, --json [/path/to/file.json]',
    'Write findings to file.', rc.withJson.bind(rc))
  .option('-s, --sumo [https://sumologic-http-connector]',
    'Write findings to SumoLogic.', rc.withSumo.bind(rc))
  .option('-i, --ip [ip]',
    'The computer\'s primary IP address. Necessary for the clair scanner an macOS because of a Docker agent.', rc.withIp.bind(rc))
  .option('-H, --http [https://your-site.com/api/results]',
    'Write findings to a given url.', rc.withHttp.bind(rc))
  .command('scan [images...]')
  .action(images => { images.forEach(rc.withImage.bind(rc)) })

program.parse(process.argv)

scan(rc)
  .then(code => { process.exit(code) })
  .catch(e => {
    logger.error('Unexpected error occurred!', e.message)
    process.exit(42)
  })
